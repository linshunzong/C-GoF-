1.创建型模式
a.
Factor基类，含有有用来创建类的纯虚函数 Create，一般用来创建某种比较具体的对象
好处是隐藏了具体类的设计，并延迟了对象的创建，使用者只管create一个对象出来而不管其他
b.
AbstractFactor基类，Factor基础扩展，有多个不同的接口Create1、Create2...，可以用来创建一组类型的对象
c.
singleton单例，主要有饿汉和懒汉模式，饿汉是在程序一开始就创建，懒汉是在第一次访问接口时才创建
懒汉设计主要是注意线程的安全和内存回收；
如果把单例设计为静态的成员变量，并打算在程序一开始就构造，要注意是否有可能在自己还没构造就被别人调用
（如同样的其他单例静态先启动构造，而在该单例构造函数里又要调用没完成构造的单例，则就会出问题），
可以结合懒汉模式改为函数内静态变量，并在启动之前通过其他的静态构造调用，则不管谁先谁后都会执行该变量的构造，才能返回该变量
结合模板设计，还可以把单例设计成可继承扩展的模式
d.
builder也是用来创建类的，主要是把一个复杂的类分成几个部分，每个部分对应一个接口
最后有个direct导演类来传参具体实现
e.prototype主要是用已存在的原型来拷贝出一个新的对象出来，注意深浅拷贝





